<?php
/**
 * Custom Drupal module for the ILGA Membership approval process
 *
 * @author Klaas Eikelboom (CiviCooP)
 * @date 25 juni 2018
 * @license AGPL-3.0
 */

const ILGA_SCHOLARSHIP_APPLICATION_WEBFORM_NID = 'ilga_scholarship_application_webform_id';
const ILGA_SCHOLARSHIP_EVALUATION_WEBFORM_NID = 'ilga_scholarship_evaluation_webform_id';
const ILGA_SCHOLARSHIP_SESSION_WEBFORM_NID = 'ilga_scholarship_session_webform_id';

const ILGA_SCHOLARSHIP_EVALUATION_TABLE = 'ilga_scholarship_evaluation_table';
const ILGA_SCHOLARSHIP_DISABILITY_CUSTOM_FIELD = 'ilga_scholarship_disability_custom_field';
const ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_CUSTOM_FIELD = 'ilga_scholarship_sexual_identity_custom_field';
const ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_OPTION_GROUP = 'ilga_scholarship_sexual_identity_option_group';

const ILGA_SCHOLARSHIP_GENDER_IDENTITY_CUSTOM_FIELD = 'ilga_scholarship_gender_identity_custom_field';
const ILGA_SCHOLARSHIP_GENDER_IDENTITY_OPTION_GROUP = 'ilga_scholarship_gender_identity_option_group';

const ILGA_SCHOLARSHIP_INTERSEX_CUSTOM_FIELD = 'ilga_scholarship_intersex_custom_field';
const ILGA_SCHOLARSHIP_INDIGENOUS_CUSTOM_FIELD = 'ilga_scholarship_indigenous_custom_field';
const ILGA_SCHOLARSHIP_MARGINALISED_CUSTOM_FIELD = 'ilga_scholarship_marginalised_custom_field';
const ILGA_SCHOLARSHIP_HIV_CUSTOM_FIELD = 'ilga_scholarship_hiv_custom_field';
const ILGA_SCHOLARSHIP_SEXWORKER_CUSTOM_FIELD = 'ilga_scholarship_sexworker_custom_field';
const ILGA_SCHOLARSHIP_NATIONALITY_CUSTOM_FIELD = 'ilga_scholarship_nationality_custom_field';

const ILGA_SCHOLARSHIP_RECEIVED_CUSTOM_FIELD = 'ilga_scholarship_received_custom_field';
const ILGA_SCHOLARSHIP_WORKSHOP_CUSTOM_FIELD = 'ilga_scholarship_workshop_custom_field';
const ILGA_SCHOLARSHIP_SCORE_CUSTOM_FIELD = 'ilga_scholarship_score_custom_field';
const ILGA_SCHOLARSHIP_VERDICT_CUSTOM_FIELD = 'ilga_scholarship_verdict_custom_field';
const ILGA_SCHOLARSHIP_VERDICT_COUNT_VALUE = 'ilga_scholarship_verdict_count_value';
const ILGA_SCHOLARSHIP_VERDICT_COUNT_LEVEL = 'ilga_scholarship_verdict_count_level';
const ILGA_SCHOLARSHIP_EVALUATION_CUSTOM_FIELD = 'ilga_scholarship_evaluation_custom_field';
const ILGA_SCHOLARSHIP_EVALUATION_OPTION_GROUP = 'ilga_scholarship_evaluation_option_group';
const ILGA_SCHOLARSHIP_EVALUATION_TOTAL_CUSTOM_FIELD = 'ilga_scholarship_evaluation_total_custom_field';
const ILGA_SCHOLARSHIP_SCORE_EXPLANATION_CUSTOM_FIELD = 'ilga_scholarship_score_explanation_custom_field';
const ILGA_SCHOLARSHIP_CASE_TYPE = 'ilga_scholarship_case_type';
const ILGA_SCHOLARSHIP_EVALUATE_ACTIVITY_TYPE = 'ilga_scholarship_evaluate_activity_type';
const ILGA_SCHOLARSHIP_SESSION_ACTIVITY_TYPE = 'ilga_scholarship_session_activity_type';
const ILGA_SCHOLARSHIP_SESSION_VERDICT_CUSTOM_FIELD = 'ilga_scholarship_session_verdict_custom_field';
const ILGA_SCHOLARSHIP_STREAM_CUSTOM_FIELD = 'ilga_scholarship_stream_custom_field';
const ILGA_SCHOLARSHIP_SUBMISSION_CUSTOM_FIELD = 'ilga_scholarship_submission_custom_field';

const ILGA_SCHOLARSHIP_REFERENCE_DATE = 'ilga_scholarship_reference_date';

// stuff for membership

const ILGA_SCHOLARSHIP_REPRESENTING_RELATION_TYPE = 'ilga_scholarship_representing_relation_type';
const ILGA_SCHOLARSHIP_VALID_MEMBERSHIP_TYPES = 'ilga_scholarship_valid_membership_types';


/**
 * Drupal menu hook
 * @return array
 */
function ilga_scholarship_menu(){
  $items = [];
  $items['admin/config/system/ilga-scholarship'] = [
    'title' => 'ILGA Scholarship configuration',
    'description' => 'Configure the scholarship applicants module',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['_ilga_scholarship_config_form'],
    'access arguments' => ['access administration pages'],
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['scholarship/exportsessionvotes'] = [
    'title' => 'Export the session votes',
    'description' => 'Export the session votes',
    'page callback' => '_ilga_scholarship_exportsessionvotes',
    'access arguments' => ['access administration pages'],
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['scholarship/votesession/%/%'] = [
    'title' => 'Session approval',
    'description' => 'Session approval',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['_ilga_scholarship_sessionvote',2,3],
    'access arguments' => ['evaluate sessions'],
    'type' => MENU_CALLBACK

  ];
  return $items;
}

/**
 * Implementation of the permission hook
 * @return array
 */
function ilga_scholarship_permission() {
  return [
    'evaluate sessions' => [
      'title' => t('Evaluate Sessions'),
      'description' => t('Evaluate en vote on proposed sessions'),
    ],
  ];
}

/**
 * @param $form
 * @param $form_state
 * @param $submissionId
 * @param $proposerId
 *
 * @return mixed
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_sessionvote($form, &$form_state,$submissionId,$proposerId) {

  civicrm_initialize();
  $form['verdict'] = [
    '#type' => 'select',
    '#title' => 'Evaluation',
    '#options' => ilga_scholarship_helper::customFieldOptions(variable_get(ILGA_SCHOLARSHIP_SESSION_VERDICT_CUSTOM_FIELD))
  ];

  $form['submissionid'] = [
    '#type' => 'hidden',
    '#value' => $submissionId
  ];

  $form['proposerid'] = [
    '#type' => 'hidden',
    '#value' => $proposerId
  ];

  $form['details'] = [
     '#type' => 'textarea',
     '#title' => 'Motivation for your choice',
  ];

  $form['submit'] = [
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#submit' => ['_ilga_scholarship_sessionvote_submit']
  ];

  $activityId = CRM_Scholarship_Utils::findActivityBySid($submissionId,ilga_scholarship_helper::currentUser());
  if($activityId){
    $activity = civicrm_api3('Activity','getsingle',['id' => $activityId]);
    $form['details']['#default_value'] = $activity['details'];
    $form['verdict']['#default_value'] = $activity[variable_get(ILGA_SCHOLARSHIP_SESSION_VERDICT_CUSTOM_FIELD)];
  }

  return $form;
}

/**
 * @param $form
 * @param $form_state
 */
function _ilga_scholarship_sessionvote_submit($form, &$form_state) {

  $values = $form_state['values'];
  CRM_Scholarship_Utils::updateActivitySid(
    $values['proposerid'],
    ilga_scholarship_helper::currentUser(),
    $values['submissionid'],
    $values['verdict'],
    $values['details']
  );
  drupal_goto('/session-proposals');
}

/**
 *
 */
function _ilga_scholarship_exportsessionvotes(){
  // send response headers to the browser
  civicrm_initialize();
  drupal_add_http_header('Content-Type', 'text/csv');
  drupal_add_http_header('Content-Disposition', 'attachment;filename=sessionverdicts.csv');
  $csv_array = CRM_Scholarship_Utils::sessionVerdictResults();
  $fp = fopen('php://output', 'w');
  foreach($csv_array as $line){
    fputcsv($fp, $line);
  }
  fclose($fp);
  drupal_exit();
}

/**
 * Configuration form
 *
 * @param $form
 * @param $form_state
 *
 * @return mixed
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_config_form($form, &$form_state){
  civicrm_initialize();
  $webformOptions = _ilga_scholarship_webformOptions();
  $scholarShipApplicationCustomfields = _ilga_scholarship_customFieldOptions('Scholarship_application');
  $evaluationCustomfields = _ilga_scholarship_customFieldOptions('Evaluation');
  $sessionCustomfields = _ilga_scholarship_customFieldOptions('Sessions_proposal_evaluation');
  $individualCustomfields = _ilga_scholarship_individual_customFieldOptions();
  $caseTypes = _ilga_scholarship_caseTypes();
  $activityTypes = _ilga_scholarship_activityTypes();
  $relationshipTypes = _ilga_scholarship_relationshipTypes();
  $optionGroups = _ilga_scholarship_optionGroups();
  $verdictOptions = _ilga_scholarship_verdictOptions();

  $form['webforms'] = [
    ILGA_SCHOLARSHIP_APPLICATION_WEBFORM_NID => [
      "#title" => 'Select the webform that is used for the scholarship application',
      '#type' => 'select',
      '#options' => $webformOptions,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_APPLICATION_WEBFORM_NID, array_keys($webformOptions)[0]),
    ],
    ILGA_SCHOLARSHIP_EVALUATION_WEBFORM_NID => [
      "#title" => 'Select the webform that is used for the scholarship evaluation activity',
      '#type' => 'select',
      '#options' => $webformOptions,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_EVALUATION_WEBFORM_NID, array_keys($webformOptions)[0]),
    ],
    ILGA_SCHOLARSHIP_SESSION_WEBFORM_NID => [
      "#title" => 'Select the webform that is used for the session evaluation',
      '#type' => 'select',
      '#options' => $webformOptions,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SESSION_WEBFORM_NID, array_keys($webformOptions)[0]),
    ],
    '#type' => 'fieldset',
    '#title' => 'Forms Configuration',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  ];

  $form[ILGA_SCHOLARSHIP_CASE_TYPE] = [
    "#title" => 'Type of the scholar application case',
    '#type' => 'select',
    '#options' => $caseTypes,
    '#default_value' => variable_get(ILGA_SCHOLARSHIP_CASE_TYPE, array_keys($caseTypes)[0]),
  ];

  $form['scholarshipquesitons'] = [
    '#type' => 'fieldset',
    '#title' => 'Scholarship Questions',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for sexual identity',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_OPTION_GROUP => [
      "#title" => 'Option Group that selects the values of the sexual identity',
      '#type' => 'select',
      '#options' => $optionGroups,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SEXUAL_IDENTITY_OPTION_GROUP, array_keys($optionGroups)[0]),
    ],
    ILGA_SCHOLARSHIP_GENDER_IDENTITY_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for gender identity',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_GENDER_IDENTITY_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_GENDER_IDENTITY_OPTION_GROUP => [
      "#title" => 'Option Group that selects the values of the gender identity',
      '#type' => 'select',
      '#options' => $optionGroups,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_GENDER_IDENTITY_OPTION_GROUP, array_keys($optionGroups)[0]),
    ],
    ILGA_SCHOLARSHIP_INTERSEX_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for intersex',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_INTERSEX_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_INDIGENOUS_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for indigenous or traditional group',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_INDIGENOUS_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_MARGINALISED_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for a marginalised group',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_MARGINALISED_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_HIV_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for a person living with hiv',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_HIV_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_SEXWORKER_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for a sex worker',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SEXWORKER_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_DISABILITY_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for disability',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_DISABILITY_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_RECEIVED_CUSTOM_FIELD => [
      "#title" => 'Custom Case field received previous scholarship',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_RECEIVED_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_NATIONALITY_CUSTOM_FIELD => [
      "#title" => 'Custom Case field country of nationality',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_NATIONALITY_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_WORKSHOP_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for applying for workshop proposal',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_WORKSHOP_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
  ];

  $form['scholarshipScoring'] = [
    '#type' => 'fieldset',
    '#title' => 'Scholarship Scoring',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    ILGA_SCHOLARSHIP_SCORE_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for recording the score',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SCORE_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_SCORE_EXPLANATION_CUSTOM_FIELD => [
      "#title" => 'Custom Case field for recording the score motivation',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SCORE_EXPLANATION_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
  ];

  $form['membership'] = [
    '#type' => 'fieldset',
    '#title' => 'Membership',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    ILGA_SCHOLARSHIP_REPRESENTING_RELATION_TYPE => [
      '#title' => 'Representing Relation ship',
      '#type' => 'select',
      '#options' => $relationshipTypes,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_REPRESENTING_RELATION_TYPE, array_keys($relationshipTypes)[0]),
    ],
    ILGA_SCHOLARSHIP_VALID_MEMBERSHIP_TYPES => [
      '#title' => 'Valid membership types',
      '#type'  => 'checkboxes',
      '#options' => _ilga_scholarship_membershipTypes(),
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_VALID_MEMBERSHIP_TYPES,[]),
    ]
  ];

  $form['evaluation'] = [
    '#type' => 'fieldset',
    '#title' => 'Scholarship Evaluation',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    ILGA_SCHOLARSHIP_EVALUATE_ACTIVITY_TYPE => [
      "#title" => 'Activity type of the scholarship application',
      '#type' => 'select',
      '#options' => $activityTypes,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_EVALUATE_ACTIVITY_TYPE, array_keys($activityTypes)[0]),
    ],
    ILGA_SCHOLARSHIP_EVALUATION_CUSTOM_FIELD => [
      "#title" => 'Score field for the evaluator',
      '#type' => 'select',
      '#options' => $evaluationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_EVALUATION_CUSTOM_FIELD, array_keys($evaluationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_EVALUATION_OPTION_GROUP => [
      "#title" => 'Option Group for the score evaluator',
      '#type' => 'select',
      '#options' => $optionGroups,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_EVALUATION_OPTION_GROUP, array_keys($optionGroups)[0]),
    ],
    ILGA_SCHOLARSHIP_EVALUATION_TOTAL_CUSTOM_FIELD => [
      "#title" => 'Total score of the evaluation on the case',
      '#type' => 'select',
      '#options' => $scholarShipApplicationCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_EVALUATION_TOTAL_CUSTOM_FIELD, array_keys($scholarShipApplicationCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_VERDICT_CUSTOM_FIELD => [
      "#title" => 'Field on the evaluator where the verdict counts are shown',
      '#type' => 'select',
      '#options' => $individualCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_VERDICT_CUSTOM_FIELD, array_keys($individualCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_VERDICT_COUNT_VALUE => [
      "#title" => 'What verdict must be maximized',
      '#type' => 'radios',
      '#options' => $verdictOptions,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_VERDICT_COUNT_VALUE, array_keys($verdictOptions)[0]),
      '#description' => 'If the wrong values are shown, save refresh and try again',

    ],
    ILGA_SCHOLARSHIP_VERDICT_COUNT_LEVEL => [
    "#title" => 'What the maximum amount',
    '#type' => 'textfield',
    '#default_value' => variable_get(ILGA_SCHOLARSHIP_VERDICT_COUNT_LEVEL, 10),
    ]
  ];

  $form['session'] = [
    '#type' => 'fieldset',
    '#title' => 'Session Stuff',
    ILGA_SCHOLARSHIP_SESSION_ACTIVITY_TYPE => [
      "#title" => 'Activity type of session evalution',
      '#type' => 'select',
      '#options' => $activityTypes,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SESSION_ACTIVITY_TYPE, array_keys($activityTypes)[0]),
    ],
    ILGA_SCHOLARSHIP_SESSION_VERDICT_CUSTOM_FIELD => [
     "#title" => 'Field used for the session evaluation result',
      '#type' => 'select',
      '#options' => $sessionCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_SESSION_VERDICT_CUSTOM_FIELD , array_keys($sessionCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_SUBMISSION_CUSTOM_FIELD=> [
      "#title" => 'Add submission id to the session id activity',
      '#type' => 'select',
      '#options' => $sessionCustomfields,
      '#default_value' => variable_get( ILGA_SCHOLARSHIP_SUBMISSION_CUSTOM_FIELD, array_keys($sessionCustomfields)[0]),
    ],
    ILGA_SCHOLARSHIP_STREAM_CUSTOM_FIELD => [
      "#title" => 'Field used for the stream of the evalutor',
      '#type' => 'select',
      '#options' => $individualCustomfields,
      '#default_value' => variable_get(ILGA_SCHOLARSHIP_STREAM_CUSTOM_FIELD , array_keys($individualCustomfields)[0]),

    ]

  ];

  $form[ILGA_SCHOLARSHIP_REFERENCE_DATE] = [
    "#title" => 'Reference date for calculating age',
    '#type' => 'date',
    '#default_value' => variable_get(ILGA_SCHOLARSHIP_REFERENCE_DATE),
  ];

  return system_settings_form($form);
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_activityTypes() {
  $result = civicrm_api3('OptionValue', 'get', [
    'return' => ['value','name'],
    'option_group_id' => "activity_type",
    'options' => ['limit' => 0, 'sort' => 'name'],
  ]);

  $activityTypes = [];
  foreach ($result['values'] as $value) {
    $activityTypes[$value['value']] = $value['name'];
  }
  return $activityTypes;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_caseTypes() {
  $caseTypes = [];
  $result = $result = civicrm_api3('CaseType', 'get', [
    'return' => ["title"],
  ]);
  foreach($result['values'] as $value){
    $caseTypes[$value['id']] = $value['title'];
  }
  return $caseTypes;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_relationshipTypes(){
  $relationshipTypes = [];
  $result = $result = civicrm_api3('RelationshipType', 'get', [
    'return' => ['name_a_b'],
    'options' => ['limit' =>0,'sort'=>'name_a_b']
  ]);
  foreach($result['values'] as $value){
    $relationshipTypes[$value['id']] = $value['name_a_b'];
  }
  return $relationshipTypes;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_membershipTypes(){
  $membershipTypes = [];
  $result = $result = civicrm_api3('MembershipType', 'get', [
    'return' => ['name'],
    'options' => ['limit' =>0,'sort'=>'name']
  ]);
  foreach($result['values'] as $value){
    $membershipTypes[$value['id']] = $value['name'];
  }
  return $membershipTypes;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_customFieldOptions($customGroup) {
  $customFieldOptions = [];
  try {
    $result = civicrm_api3('CustomField', 'get', [
      'sequential' => 1,
      'return' => ['label'],
      'custom_group_id' => $customGroup,
      'options' => [
        'limit' => 0,
        'sort'  => 'label'
      ]
    ]);
    foreach ($result['values'] as $value) {
      $customFieldOptions['custom_' . $value['id']] = $value['label'];
    }
  } catch (CiviCRM_API3_Exception $ex) {
    throw new Exception('Unable to load customgroup '.$customGroup);
  }

  return $customFieldOptions;
}

/**
 * @return array
 */
function _ilga_scholarship_individual_customFieldOptions() {
  $customFieldOptions = [];
  $dao = CRM_Core_DAO::executeQuery("
    select cf.id,cf.label from civicrm_custom_group cg
    join civicrm_custom_field cf on (cf.custom_group_id=cg.id)
    where cg.extends='Individual' and cf.is_active=1
    order by cf.label"
  );
  while ($dao->fetch()) {
    $customFieldOptions[$dao->id] = 'custom_'.$dao->label;
  }
  return $customFieldOptions;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_optionGroups() {
  $optionGroups = [];
  $result = civicrm_api3('OptionGroup', 'get', array(
    'return' => ['name','title'],
    'options' => ['limit' => 0 , 'sort' => 'title'],
    'is_active' => 1,
  ));
  foreach ($result['values'] as $value) {
    $optionGroups[$value['name']] = $value['title'];
  }
  return $optionGroups;
}

/**
 * @return array all the published and unpublished webforms
 */
function _ilga_scholarship_webformOptions() {
  $query = db_query("SELECT nid, title FROM {node} WHERE type='webform'");
  $webformOptions = [];
  $records = $query->fetchAll();
  foreach ($records as $record) {
    $webformOptions[$record->nid] = $record->title;
  }
  return $webformOptions;
}

/**
 * @return array
 * @throws \CiviCRM_API3_Exception
 */
function _ilga_scholarship_verdictOptions() {
  $options = [];
  $result = civicrm_api3('OptionValue', 'get', [
    'option_group_id' => variable_get(ILGA_SCHOLARSHIP_EVALUATION_OPTION_GROUP),
  ]);
  foreach ($result['values'] as $value){
    $options[$value['value']] = $value['label'];
  }
  return $options;
}

/**
 * Calculate the scholarship score after updating the webform
 *
 * @param $node
 * @param $submission
 */
function ilga_scholarship_webform_submission_update($node, $submission) {
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  if ($node->nid == variable_get(ILGA_SCHOLARSHIP_EVALUATION_WEBFORM_NID)) {
    $verdictCount = new CRM_Scholarship_VerdictCount(ilga_scholarship_helper::currentUser());
    $verdictCount -> process();
  }
}

/**
 * Calculate the scholarship score after submitting the webform
 * @param $node
 * @param $submission
 */
function ilga_scholarship_webform_submission_insert($node, $submission) {
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  if ($node->nid == variable_get(ILGA_SCHOLARSHIP_EVALUATION_WEBFORM_NID)) {
     $verdictCount = new CRM_Scholarship_VerdictCount(ilga_scholarship_helper::currentUser());
     $verdictCount -> process();
  }
  if ($node->nid == variable_get(ILGA_SCHOLARSHIP_SESSION_WEBFORM_NID)) {
    $civiSubmission = webform_get_submission($submission->nid,$submission->sid);
    $activityId = $civiSubmission->civicrm['activity'][1]['id'];
    CRM_Scholarship_Utils::updateActivitySid($activityId,$submission->sid);
  }
}

/**
 * The weight of this module must be larger als webform civicrm to ensure
 * the hooks execute after the webform civicrm hooks
 */
function ilga_scholarship_install() {
  db_update('system')
    ->fields(['weight' => 8])
    ->condition('name', 'ilga_scholarship', '=')
    ->execute();
}

/**
 * Add the custom view elements
 * @return array
 */
function ilga_scholarship_views_api() {
  return [
    'api' => 3.0,
    'path' => drupal_get_path('module', 'ilga_scholarship') . '/includes',
  ];
}

